<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/jee
		http://www.springframework.org/schema/jee/spring-jee-3.0.xsd">

	<!-- =================================================================================== -->
	<!-- **** SUPPORTING LIFE PERSISTENCE **** -->
	<!-- =================================================================================== -->

	<!-- Facilitates EntityManager injection in Spring i.e. @PersistentContext 
		annotation will be handled -->
	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<!-- Facilitates Exception Translation i.e. @Repository annotation will 
		be handled. Exceptions will be translated to one of Spring's unified data 
		access exceptions -->
	<bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

<!--	<jee:jndi-lookup id="supportingLifeDataSource"
		jndi-name="/jdbc/supp_life" resource-ref="true" /> -->

<!--	<bean id="supportingLifeDataSource" class="org.apache.tomcat.jdbc.pool.DataSourceFactory"
		destroy-method="close">
		<property name="driverClassName">
			<value>com.mysql.jdbc.Driver</value>
		</property>
		<property name="url">
			<value>${JDBC_CONNECTION_STRING}</value>
		</property>
		<property name="username">
			<value>${AWS_ACCESS_KEY_ID}</value>
		</property>
		<property name="password">
			<value>${AWS_SECRET_KEY}</value>
		</property>
	</bean> -->

	<bean id="supportingLifeDataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName">
			<value>com.mysql.jdbc.Driver</value>
		</property>
		<property name="url">
			<value>jdbc:mysql://myslinstance.ckaovsq8slyk.eu-west-1.rds.amazonaws.com:3306/supportinglifedb</value>
		</property>
		<property name="username">
			<value>tosulliv</value>
		</property>
		<property name="password">
			<value>supporting2013</value>
		</property>
		<property name="maxActive">
			<value>0</value>
		</property>
		<property name="initialSize">
			<value>50</value>
		</property>
	</bean>

	<bean id="jpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="database" value="MYSQL" />
		<property name="showSql" value="true" />
		<property name="generateDdl" value="false" />
	</bean>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="supportingLifeDataSource" />
		<property name="packagesToScan" value="ie.ucc.bis.domain" />
		<property name="jpaVendorAdapter" ref="jpaVendorAdapter" />
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">create-drop</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
			</props>
		</property>
	</bean>

	<!-- =================================================================================== -->
	<!-- **** END OF SUPPORTING LIFE PERSISTENCE **** -->
	<!-- =================================================================================== -->

</beans>