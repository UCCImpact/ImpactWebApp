<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:util="http://www.springframework.org/schema/util" 
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/util 
		http://www.springframework.org/schema/util/spring-util.xsd  
		http://www.springframework.org/schema/task 
		http://www.springframework.org/schema/task/spring-task-3.0.xsd">

	<!-- =================================================================================== -->
	<!-- **** SUPPORTING LIFE SCHEDULER													**** -->
	<!-- =================================================================================== -->
	<!-- Activates @Scheduled and @Async annotations for scheduling -->

	<!-- The 'executor' element: When a task is submitted, the executor will 
		first try to use a free thread if the number of active threads is currently 
		less than the core size. If the core size has been reached, then the task 
		will be added to the queue as long as its capacity has not yet been reached. 
		Only then, if the queue's capacity has been reached, will the executor create 
		a new thread beyond the core size. If the max size has also been reached, 
		then the executor will reject the task See: 25.4.2 The 'executor' element -->
	<task:annotation-driven executor="executorWithPoolSizeRange" scheduler="taskScheduler" />
		
	<!-- Defines a ThreadPoolTaskExecutor instance with configurable pool size, 
		queue-capacity, keep-alive, and rejection-policy values. The id becomes the 
		default thread name prefix -->
	<task:executor id="executorWithPoolSizeRange" pool-size="5-25" queue-capacity="100"></task:executor>
	
	<!-- Defines a ThreadPoolTaskScheduler instance with configurable pool size. 
		The id becomes the default thread name prefix. -->
	<task:scheduler id="taskScheduler" pool-size="1"></task:scheduler>

	<bean id="DiseaseSurveillanceSchedulerBean"	class="ie.ucc.bis.supportinglife.scheduler.DiseaseSurveillanceScheduler">
		<property name="supportingLifeServiceInf">
			<ref bean="SupportingLifeServiceBean" />
		</property>
		<property name="mailHandler">
			<ref bean="MailHandlerBean" />
		</property>
	</bean>
	
	<!-- =================================================================================== -->
	<!-- **** END OF SUPPORTING LIFE SCHEDULER											**** -->
	<!-- =================================================================================== -->
    		
</beans>